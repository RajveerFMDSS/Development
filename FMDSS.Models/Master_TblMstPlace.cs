// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace FMDSS.Models
{

    // tbl_mst_Places
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class Master_TblMstPlace
    {
        public long PlaceId { get; set; } // PlaceID (Primary key)
        public string DistCode { get; set; } // DIST_CODE (length: 10)
        public string PlaceName { get; set; } // PlaceName (length: 200)
        public string Category { get; set; } // Category (length: 50)
        public string Code { get; set; } // Code (length: 10)
        public string ShiftTypeId { get; set; } // ShiftTypeID (length: 50)
        public string PlaceDisplayIDs { get; set; } // PlaceDisplayIDs (length: 50)
        public string IsAccommodation { get; set; } // IsAccommodation (length: 50)
        public string IsSafari { get; set; } // IsSafari (length: 50)
        public bool IsZone { get; set; } // IsZone
        public int TicketAllocatedPerShift { get; set; } // TicketAllocatedPerShift
        public int MaxBookingDuration { get; set; } // MaxBookingDuration
        public decimal Tax { get; set; } // Tax
        public decimal EmitraCharges { get; set; } // EmitraCharges
        public string ContactPerson { get; set; } // ContactPerson (length: 100)
        public string Address { get; set; } // Address (length: 500)
        public string PhoneNo { get; set; } // PhoneNo (length: 30)
        public string BoardingPoint { get; set; } // Boarding_Point (length: 500)
        public bool Isactive { get; set; } // Isactive
        public System.DateTime EnteredOn { get; set; } // EnteredOn
        public long EnteredBy { get; set; } // EnteredBy
        public System.DateTime? UpdatedOn { get; set; } // UpdatedOn
        public long UpdatedBy { get; set; } // UpdatedBy

        // Reverse navigation

        /// <summary>
        /// Child Master_TblMstEqptSanctuariesFees where [tbl_mst_Eqpt_SanctuariesFee].[PlaceID] point to this entity (FK_Place)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Master_TblMstEqptSanctuariesFee> Master_TblMstEqptSanctuariesFees { get; set; } // tbl_mst_Eqpt_SanctuariesFee.FK_Place
        /// <summary>
        /// Child Master_TblMstTicketingFees where [tbl_mst_TicketingFees].[PlaceID] point to this entity (FK_tbl_mst_TicketingFees_tbl_mst_Places)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Master_TblMstTicketingFee> Master_TblMstTicketingFees { get; set; } // tbl_mst_TicketingFees.FK_tbl_mst_TicketingFees_tbl_mst_Places

        // Foreign keys

        /// <summary>
        /// Parent Master_TblMstDistrict pointed by [tbl_mst_Places].([DistCode]) (FK_DIST_CODE)
        /// </summary>
        public virtual Master_TblMstDistrict Master_TblMstDistrict { get; set; } // FK_DIST_CODE

        public Master_TblMstPlace()
        {
            ShiftTypeId = "0";
            PlaceDisplayIDs = "0";
            IsAccommodation = "0";
            IsSafari = "0";
            IsZone = false;
            TicketAllocatedPerShift = 0;
            MaxBookingDuration = 0;
            Tax = 0m;
            EmitraCharges = 5m;
            Isactive = true;
            EnteredOn = System.DateTime.Now;
            EnteredBy = 1;
            UpdatedBy = 1;
            Master_TblMstEqptSanctuariesFees = new System.Collections.Generic.List<Master_TblMstEqptSanctuariesFee>();
            Master_TblMstTicketingFees = new System.Collections.Generic.List<Master_TblMstTicketingFee>();
        }
    }

}
// </auto-generated>
