// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace FMDSS.Models
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class Fakedb_FMDSS : Idb_FMDSS
    {
        public System.Data.Entity.DbSet<AspNetRole> AspNetRoles { get; set; }
        public System.Data.Entity.DbSet<AspNetUser> AspNetUsers { get; set; }
        public System.Data.Entity.DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public System.Data.Entity.DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblAssignGuideAndVehicleForDateOfVisite> Citizen_TblAssignGuideAndVehicleForDateOfVisites { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblCancelRequestedId> Citizen_TblCancelRequestedIds { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblDownloadTicket> Citizen_TblDownloadTickets { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblPaymentByDepartmentalKioskUser> Citizen_TblPaymentByDepartmentalKioskUsers { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblPaymentByEmitraKioskUser> Citizen_TblPaymentByEmitraKioskUsers { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblSafariBooking> Citizen_TblSafariBookings { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblTicketBooking> Citizen_TblTicketBookings { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblTicketBookingInventory> Citizen_TblTicketBookingInventories { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblTicketBookingMember> Citizen_TblTicketBookingMembers { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblWildLifeSafariBookingDetail> Citizen_TblWildLifeSafariBookingDetails { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblWildLifeTicketBookingMemberDetail> Citizen_TblWildLifeTicketBookingMemberDetails { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblZooBooking> Citizen_TblZooBookings { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblZooBookingHeadDetail> Citizen_TblZooBookingHeadDetails { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblZooBookingHeadDetailsTemp> Citizen_TblZooBookingHeadDetailsTemps { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblZooMemberDetail> Citizen_TblZooMemberDetails { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblZooStudentDocument> Citizen_TblZooStudentDocuments { get; set; }
        public System.Data.Entity.DbSet<Citizen_TblZooVehicleDetail> Citizen_TblZooVehicleDetails { get; set; }
        public System.Data.Entity.DbSet<Citizen_ZooSeatInventoryOld> Citizen_ZooSeatInventoryOlds { get; set; }
        public System.Data.Entity.DbSet<CompanyRagistration> CompanyRagistrations { get; set; }
        public System.Data.Entity.DbSet<GIS_TblMstFixedLandNocType> GIS_TblMstFixedLandNocTypes { get; set; }
        public System.Data.Entity.DbSet<GIS_TblMstFixedPermissionPlant> GIS_TblMstFixedPermissionPlants { get; set; }
        public System.Data.Entity.DbSet<GIS_TblMstFixedPermissionPlantMapping> GIS_TblMstFixedPermissionPlantMappings { get; set; }
        public System.Data.Entity.DbSet<GIS_TblMstFixedPermissionType> GIS_TblMstFixedPermissionTypes { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstAdminDivision> Master_TblMstAdminDivisions { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstDistrict> Master_TblMstDistricts { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstEqptSanctuariesFee> Master_TblMstEqptSanctuariesFees { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstModeOfBooking> Master_TblMstModeOfBookings { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstPlace> Master_TblMstPlaces { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstPlaceBookingDuration> Master_TblMstPlaceBookingDurations { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstPlaceDisplay> Master_TblMstPlaceDisplays { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstRecordStatu> Master_TblMstRecordStatus { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstShiftType> Master_TblMstShiftTypes { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstTicketingFee> Master_TblMstTicketingFees { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstVehicleEquipment> Master_TblMstVehicleEquipments { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstVehicleEquipmentFee> Master_TblMstVehicleEquipmentFees { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstWildLifeEqptFeeDetail> Master_TblMstWildLifeEqptFeeDetails { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstWildLifeHeadDetail> Master_TblMstWildLifeHeadDetails { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstWildLifeHeadMaster> Master_TblMstWildLifeHeadMasters { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstWildLifeTicketFeeDetail> Master_TblMstWildLifeTicketFeeDetails { get; set; }
        public System.Data.Entity.DbSet<Master_TblMstZone> Master_TblMstZones { get; set; }
        public System.Data.Entity.DbSet<Master_TblZooHeadMaster> Master_TblZooHeadMasters { get; set; }
        public System.Data.Entity.DbSet<Master_TblZooPlaceWiseHead> Master_TblZooPlaceWiseHeads { get; set; }
        public System.Data.Entity.DbSet<Master_TblZooSeatInventory> Master_TblZooSeatInventories { get; set; }
        public System.Data.Entity.DbSet<Master_TblZooTicketHeaderFooter> Master_TblZooTicketHeaderFooters { get; set; }
        public System.Data.Entity.DbSet<Master_TblZooVehicleEquipment> Master_TblZooVehicleEquipments { get; set; }
        public System.Data.Entity.DbSet<Master_TblZooVehicleFee> Master_TblZooVehicleFees { get; set; }
        public System.Data.Entity.DbSet<Product> Products { get; set; }
        public System.Data.Entity.DbSet<TblMstDistrict> TblMstDistricts { get; set; }
        public System.Data.Entity.DbSet<TblMstPlace> TblMstPlaces { get; set; }
        public System.Data.Entity.DbSet<TblUserProfile> TblUserProfiles { get; set; }
        public System.Data.Entity.DbSet<Token> Tokens { get; set; }
        public System.Data.Entity.DbSet<User> Users { get; set; }
        public System.Data.Entity.DbSet<ZooSeatInventoryOld> ZooSeatInventoryOlds { get; set; }

        public Fakedb_FMDSS()
        {
            AspNetRoles = new FakeDbSet<AspNetRole>("Id");
            AspNetUsers = new FakeDbSet<AspNetUser>("Id");
            AspNetUserClaims = new FakeDbSet<AspNetUserClaim>("Id");
            AspNetUserLogins = new FakeDbSet<AspNetUserLogin>("LoginProvider", "ProviderKey", "UserId");
            Citizen_TblAssignGuideAndVehicleForDateOfVisites = new FakeDbSet<Citizen_TblAssignGuideAndVehicleForDateOfVisite>("Id");
            Citizen_TblCancelRequestedIds = new FakeDbSet<Citizen_TblCancelRequestedId>("Id", "Status");
            Citizen_TblDownloadTickets = new FakeDbSet<Citizen_TblDownloadTicket>("Id", "RequestedId", "TableName");
            Citizen_TblPaymentByDepartmentalKioskUsers = new FakeDbSet<Citizen_TblPaymentByDepartmentalKioskUser>("RowId", "PaymentMode");
            Citizen_TblPaymentByEmitraKioskUsers = new FakeDbSet<Citizen_TblPaymentByEmitraKioskUser>("RowId");
            Citizen_TblSafariBookings = new FakeDbSet<Citizen_TblSafariBooking>("Id");
            Citizen_TblTicketBookings = new FakeDbSet<Citizen_TblTicketBooking>("TicketId");
            Citizen_TblTicketBookingInventories = new FakeDbSet<Citizen_TblTicketBookingInventory>("Id");
            Citizen_TblTicketBookingMembers = new FakeDbSet<Citizen_TblTicketBookingMember>("MemberId");
            Citizen_TblWildLifeSafariBookingDetails = new FakeDbSet<Citizen_TblWildLifeSafariBookingDetail>("Rowid");
            Citizen_TblWildLifeTicketBookingMemberDetails = new FakeDbSet<Citizen_TblWildLifeTicketBookingMemberDetail>("Rowid");
            Citizen_TblZooBookings = new FakeDbSet<Citizen_TblZooBooking>("ZooBookingId");
            Citizen_TblZooBookingHeadDetails = new FakeDbSet<Citizen_TblZooBookingHeadDetail>("Id");
            Citizen_TblZooBookingHeadDetailsTemps = new FakeDbSet<Citizen_TblZooBookingHeadDetailsTemp>("Id");
            Citizen_TblZooMemberDetails = new FakeDbSet<Citizen_TblZooMemberDetail>("ZooMemberId");
            Citizen_TblZooStudentDocuments = new FakeDbSet<Citizen_TblZooStudentDocument>("ZooStudentId");
            Citizen_TblZooVehicleDetails = new FakeDbSet<Citizen_TblZooVehicleDetail>("ZooVehicleId");
            Citizen_ZooSeatInventoryOlds = new FakeDbSet<Citizen_ZooSeatInventoryOld>("ZooSeatInventoryId");
            CompanyRagistrations = new FakeDbSet<CompanyRagistration>("CompanyId");
            GIS_TblMstFixedLandNocTypes = new FakeDbSet<GIS_TblMstFixedLandNocType>("NocTypeId");
            GIS_TblMstFixedPermissionPlants = new FakeDbSet<GIS_TblMstFixedPermissionPlant>("Id");
            GIS_TblMstFixedPermissionPlantMappings = new FakeDbSet<GIS_TblMstFixedPermissionPlantMapping>("Id");
            GIS_TblMstFixedPermissionTypes = new FakeDbSet<GIS_TblMstFixedPermissionType>("PId");
            Master_TblMstAdminDivisions = new FakeDbSet<Master_TblMstAdminDivision>("DivisionCode");
            Master_TblMstDistricts = new FakeDbSet<Master_TblMstDistrict>("DistCode");
            Master_TblMstEqptSanctuariesFees = new FakeDbSet<Master_TblMstEqptSanctuariesFee>("Id");
            Master_TblMstModeOfBookings = new FakeDbSet<Master_TblMstModeOfBooking>("Id");
            Master_TblMstPlaces = new FakeDbSet<Master_TblMstPlace>("PlaceId");
            Master_TblMstPlaceBookingDurations = new FakeDbSet<Master_TblMstPlaceBookingDuration>("Id");
            Master_TblMstPlaceDisplays = new FakeDbSet<Master_TblMstPlaceDisplay>("Rowid", "Name");
            Master_TblMstRecordStatus = new FakeDbSet<Master_TblMstRecordStatu>("Isactive");
            Master_TblMstShiftTypes = new FakeDbSet<Master_TblMstShiftType>("Rowid", "Name");
            Master_TblMstTicketingFees = new FakeDbSet<Master_TblMstTicketingFee>("FeesId");
            Master_TblMstVehicleEquipments = new FakeDbSet<Master_TblMstVehicleEquipment>("CategoryId");
            Master_TblMstVehicleEquipmentFees = new FakeDbSet<Master_TblMstVehicleEquipmentFee>("VehicleId");
            Master_TblMstWildLifeEqptFeeDetails = new FakeDbSet<Master_TblMstWildLifeEqptFeeDetail>("Rowid");
            Master_TblMstWildLifeHeadDetails = new FakeDbSet<Master_TblMstWildLifeHeadDetail>("Rowid");
            Master_TblMstWildLifeHeadMasters = new FakeDbSet<Master_TblMstWildLifeHeadMaster>("HeadId");
            Master_TblMstWildLifeTicketFeeDetails = new FakeDbSet<Master_TblMstWildLifeTicketFeeDetail>("Rowid");
            Master_TblMstZones = new FakeDbSet<Master_TblMstZone>("ZoneId", "PlaceId", "ZoneName", "TicketAllocatedPerShift", "SeatsForCitizen", "ShiftTypeId", "Isactive", "EnteredOn", "EnteredBy", "UpdatedOn", "UpdatedBy");
            Master_TblZooHeadMasters = new FakeDbSet<Master_TblZooHeadMaster>("HeadId");
            Master_TblZooPlaceWiseHeads = new FakeDbSet<Master_TblZooPlaceWiseHead>("ZooPlaceWiseHeadId");
            Master_TblZooSeatInventories = new FakeDbSet<Master_TblZooSeatInventory>("ZooSeatInventoryId");
            Master_TblZooTicketHeaderFooters = new FakeDbSet<Master_TblZooTicketHeaderFooter>("Id");
            Master_TblZooVehicleEquipments = new FakeDbSet<Master_TblZooVehicleEquipment>("ZooVehicleId");
            Master_TblZooVehicleFees = new FakeDbSet<Master_TblZooVehicleFee>("FeeId");
            Products = new FakeDbSet<Product>("ProductId");
            TblMstDistricts = new FakeDbSet<TblMstDistrict>("DistCode");
            TblMstPlaces = new FakeDbSet<TblMstPlace>("PlaceId");
            TblUserProfiles = new FakeDbSet<TblUserProfile>("UserId");
            Tokens = new FakeDbSet<Token>("TokenId");
            Users = new FakeDbSet<User>("UserId");
            ZooSeatInventoryOlds = new FakeDbSet<ZooSeatInventoryOld>("ZooSeatInventoryId");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        public System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        public System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        public System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }


        // Stored Procedures
        public System.Collections.Generic.List<AdminConfiguration_GetCompanyByUrlReturnModel> AdminConfiguration_GetCompanyByUrl(string url)
        {
            int procResult;
            return AdminConfiguration_GetCompanyByUrl(url, out procResult);
        }

        public System.Collections.Generic.List<AdminConfiguration_GetCompanyByUrlReturnModel> AdminConfiguration_GetCompanyByUrl(string url, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<AdminConfiguration_GetCompanyByUrlReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<AdminConfiguration_GetCompanyByUrlReturnModel>> AdminConfiguration_GetCompanyByUrlAsync(string url)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(AdminConfiguration_GetCompanyByUrl(url, out procResult));
        }

        public System.Collections.Generic.List<Master_SpUpdateDistrictsReturnModel> Master_SpUpdateDistricts(string action, long? rowid, bool? status)
        {
            int procResult;
            return Master_SpUpdateDistricts(action, rowid, status, out procResult);
        }

        public System.Collections.Generic.List<Master_SpUpdateDistrictsReturnModel> Master_SpUpdateDistricts(string action, long? rowid, bool? status, out int procResult)
        {

            procResult = 0;
            return new System.Collections.Generic.List<Master_SpUpdateDistrictsReturnModel>();
        }

        public System.Threading.Tasks.Task<System.Collections.Generic.List<Master_SpUpdateDistrictsReturnModel>> Master_SpUpdateDistrictsAsync(string action, long? rowid, bool? status)
        {
            int procResult;
            return System.Threading.Tasks.Task.FromResult(Master_SpUpdateDistricts(action, rowid, status, out procResult));
        }

    }
}
// </auto-generated>
