// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace FMDSS.Models
{

    // tbl_PaymentByDepartmentalKioskUser
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class Citizen_TblPaymentByDepartmentalKioskUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Citizen_TblPaymentByDepartmentalKioskUser>
    {
        public Citizen_TblPaymentByDepartmentalKioskUserConfiguration()
            : this("Citizen")
        {
        }

        public Citizen_TblPaymentByDepartmentalKioskUserConfiguration(string schema)
        {
            ToTable("tbl_PaymentByDepartmentalKioskUser", schema);
            HasKey(x => new { x.RowId, x.PaymentMode });

            Property(x => x.RowId).HasColumnName(@"RowId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ModuleId).HasColumnName(@"ModuleId").HasColumnType("int").IsOptional();
            Property(x => x.ServiceTypeId).HasColumnName(@"ServiceTypeId").HasColumnType("int").IsOptional();
            Property(x => x.PermissionId).HasColumnName(@"PermissionId").HasColumnType("int").IsOptional();
            Property(x => x.SubpermissionId).HasColumnName(@"SubpermissionId").HasColumnType("int").IsOptional();
            Property(x => x.RequestedId).HasColumnName(@"RequestedId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.PaidForCitizen).HasColumnName(@"PaidForCitizen").HasColumnType("bigint").IsOptional();
            Property(x => x.PaidBy).HasColumnName(@"PaidBy").HasColumnType("bigint").IsOptional();
            Property(x => x.PaidOn).HasColumnName(@"PaidOn").HasColumnType("datetime").IsOptional();
            Property(x => x.PaidAmount).HasColumnName(@"PaidAmount").HasColumnType("decimal").IsOptional().HasPrecision(18,0);
            Property(x => x.PaymentMode).HasColumnName(@"PaymentMode").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.BankName).HasColumnName(@"BankName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.IfscCode).HasColumnName(@"IFSCCode").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ChequeNumber).HasColumnName(@"ChequeNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ChequeDate).HasColumnName(@"ChequeDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ReceiptNumber).HasColumnName(@"ReceiptNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.EnteredDate).HasColumnName(@"EnteredDate").HasColumnType("datetime").IsOptional();
        }
    }

}
// </auto-generated>
