// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace FMDSS.Models
{

    // tbl_mst_FixedPermissionTypes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class GIS_TblMstFixedPermissionTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<GIS_TblMstFixedPermissionType>
    {
        public GIS_TblMstFixedPermissionTypeConfiguration()
            : this("GIS")
        {
        }

        public GIS_TblMstFixedPermissionTypeConfiguration(string schema)
        {
            ToTable("tbl_mst_FixedPermissionTypes", schema);
            HasKey(x => x.PId);

            Property(x => x.PId).HasColumnName(@"P_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Discount).HasColumnName(@"Discount").HasColumnType("int").IsOptional();
            Property(x => x.Tax).HasColumnName(@"Tax").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.EnteredOn).HasColumnName(@"EnteredOn").HasColumnType("datetime").IsOptional();
            Property(x => x.EnteredBy).HasColumnName(@"EnteredBy").HasColumnType("bigint").IsOptional();
            Property(x => x.EmitraServiceId).HasColumnName(@"EmitraServiceId").HasColumnType("int").IsOptional();
        }
    }

}
// </auto-generated>
