// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace FMDSS.Models
{

    // tbl_TicketBooking
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class Citizen_TblTicketBookingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Citizen_TblTicketBooking>
    {
        public Citizen_TblTicketBookingConfiguration()
            : this("Citizen")
        {
        }

        public Citizen_TblTicketBookingConfiguration(string schema)
        {
            ToTable("tbl_TicketBooking", schema);
            HasKey(x => x.TicketId);

            Property(x => x.TicketId).HasColumnName(@"TicketID").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RequestId).HasColumnName(@"RequestID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.PlaceId).HasColumnName(@"PlaceID").HasColumnType("bigint").IsRequired();
            Property(x => x.ZoneId).HasColumnName(@"ZoneID").HasColumnType("bigint").IsRequired();
            Property(x => x.ShiftTime).HasColumnName(@"ShiftTime").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
            Property(x => x.DateOfArrival).HasColumnName(@"DateOfArrival").HasColumnType("datetime").IsRequired();
            Property(x => x.TotalMembers).HasColumnName(@"TotalMembers").HasColumnType("int").IsRequired();
            Property(x => x.TotalFees).HasColumnName(@"TotalFees").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.TaxRate).HasColumnName(@"TaxRate").HasColumnType("decimal").IsRequired().HasPrecision(5,2);
            Property(x => x.AmountTobePaid).HasColumnName(@"AmountTobePaid").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.TrnStatusCode).HasColumnName(@"Trn_Status_Code").HasColumnType("int").IsOptional();
            Property(x => x.EmitraTransactionId).HasColumnName(@"EmitraTransactionID").HasColumnType("bigint").IsOptional();
            Property(x => x.Isactive).HasColumnName(@"Isactive").HasColumnType("int").IsOptional();
            Property(x => x.EnteredOn).HasColumnName(@"EnteredOn").HasColumnType("datetime").IsOptional();
            Property(x => x.EnteredBy).HasColumnName(@"EnteredBy").HasColumnType("bigint").IsOptional();
            Property(x => x.UpdatedOn).HasColumnName(@"UpdatedOn").HasColumnType("datetime").IsOptional();
            Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("bigint").IsOptional();
            Property(x => x.KioskUserId).HasColumnName(@"KioskUserId").HasColumnType("bigint").IsOptional();
            Property(x => x.IpAddress).HasColumnName(@"IP_ADDRESS").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.ManualStatus).HasColumnName(@"Manual_Status").HasColumnType("bit").IsOptional();
            Property(x => x.ManualRemarks).HasColumnName(@"Manual_Remarks").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AmountWithServiceCharges).HasColumnName(@"AmountWithServiceCharges").HasColumnType("float").IsOptional();
            Property(x => x.EMitraAmount).HasColumnName(@"EMitraAmount").HasColumnType("float").IsOptional();
            Property(x => x.EmitraCharges).HasColumnName(@"EmitraCharges").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.Tax).HasColumnName(@"tax").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.ReserveStatus).HasColumnName(@"Reserve_Status").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.SsoToken).HasColumnName(@"SsoToken").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.TotalMemberBeforeBoarding).HasColumnName(@"TotalMemberBeforeBoarding").HasColumnType("smallint").IsRequired();
            Property(x => x.EmitraCalculationType).HasColumnName(@"EmitraCalculationType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20);
        }
    }

}
// </auto-generated>
