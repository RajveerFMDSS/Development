// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace FMDSS.Models
{

    // tbl_Mst_WildLifeHeadDetails
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class Master_TblMstWildLifeHeadDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Master_TblMstWildLifeHeadDetail>
    {
        public Master_TblMstWildLifeHeadDetailConfiguration()
            : this("Master")
        {
        }

        public Master_TblMstWildLifeHeadDetailConfiguration(string schema)
        {
            ToTable("tbl_Mst_WildLifeHeadDetails", schema);
            HasKey(x => x.Rowid);

            Property(x => x.Rowid).HasColumnName(@"ROWID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.HeadDetailName).HasColumnName(@"HeadDetailName").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.HeadId).HasColumnName(@"HeadId").HasColumnType("int").IsRequired();
            Property(x => x.IsActive).HasColumnName(@"isActive").HasColumnType("bit").IsRequired();
            Property(x => x.CodeName).HasColumnName(@"CodeName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Type).HasColumnName(@"TYPE").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);

            // Foreign keys
            HasRequired(a => a.Master_TblMstWildLifeHeadMaster).WithMany(b => b.Master_TblMstWildLifeHeadDetails).HasForeignKey(c => c.HeadId).WillCascadeOnDelete(false); // HeadIDFK
        }
    }

}
// </auto-generated>
