// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace FMDSS.Models
{

    // tbl_ZooBooking
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class Citizen_TblZooBookingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Citizen_TblZooBooking>
    {
        public Citizen_TblZooBookingConfiguration()
            : this("Citizen")
        {
        }

        public Citizen_TblZooBookingConfiguration(string schema)
        {
            ToTable("tbl_ZooBooking", schema);
            HasKey(x => x.ZooBookingId);

            Property(x => x.ZooBookingId).HasColumnName(@"ZooBookingId").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RequestId).HasColumnName(@"RequestId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.BookingTypeId).HasColumnName(@"BookingTypeId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.PlaceId).HasColumnName(@"PlaceId").HasColumnType("bigint").IsRequired();
            Property(x => x.InstitutionalNameofInstitute).HasColumnName(@"Institutional_NameofInstitute").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.InstitutionalAddressofInstitute).HasColumnName(@"Institutional_AddressofInstitute").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.InstitutionalPhoneofInstitute).HasColumnName(@"Institutional_PhoneofInstitute").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.InstitutionalNameofHead).HasColumnName(@"Institutional_NameofHead").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.InstitutionalHeadPhoneNo).HasColumnName(@"Institutional_HeadPhoneNo").HasColumnType("nvarchar").IsOptional().HasMaxLength(12);
            Property(x => x.InstitutionalDocumentofTour).HasColumnName(@"Institutional_DocumentofTour").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.InstitutionalHeadIdType).HasColumnName(@"Institutional_HeadIdType").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.InstitutionalHeadIdNumber).HasColumnName(@"Institutional_HeadIdNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.InstitutionalHeadIdProof).HasColumnName(@"Institutional_HeadIdProof").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.InstitutionalDateofVisit).HasColumnName(@"Institutional_DateofVisit").HasColumnType("datetime").IsOptional();
            Property(x => x.InstitutionalTotalCameraFees).HasColumnName(@"Institutional_TotalCameraFees").HasColumnType("decimal").IsOptional().HasPrecision(16,2);
            Property(x => x.InstitutionalTotalMemberFees).HasColumnName(@"Institutional_TotalMemberFees").HasColumnType("nchar").IsOptional().IsFixedLength().HasMaxLength(10);
            Property(x => x.IsPrivateVehical).HasColumnName(@"isPrivateVehical").HasColumnType("bit").IsOptional();
            Property(x => x.InstitutionalTotalVehicalFees).HasColumnName(@"Institutional_TotalVehicalFees").HasColumnType("decimal").IsOptional().HasPrecision(16,2);
            Property(x => x.StandardTotalCameraFees).HasColumnName(@"Standard_TotalCameraFees").HasColumnType("decimal").IsOptional().HasPrecision(16,2);
            Property(x => x.StandardTotalMemberFees).HasColumnName(@"Standard_TotalMemberFees").HasColumnType("decimal").IsOptional().HasPrecision(16,2);
            Property(x => x.StandardTotalVehicalFees).HasColumnName(@"Standard_TotalVehicalFees").HasColumnType("decimal").IsOptional().HasPrecision(16,2);
            Property(x => x.TrnStatusCode).HasColumnName(@"Trn_Status_Code").HasColumnType("int").IsOptional();
            Property(x => x.EmitraTransactionId).HasColumnName(@"EmitraTransactionId").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.EmitraAmount).HasColumnName(@"EmitraAmount").HasColumnType("decimal").IsOptional().HasPrecision(16,2);
            Property(x => x.IpAddress).HasColumnName(@"IP_Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.EnteredBy).HasColumnName(@"EnteredBy").HasColumnType("bigint").IsRequired();
            Property(x => x.EnteredOn).HasColumnName(@"EnteredOn").HasColumnType("datetime").IsRequired();
            Property(x => x.UpdatedOn).HasColumnName(@"UpdatedOn").HasColumnType("datetime").IsOptional();
            Property(x => x.KioskUserId).HasColumnName(@"KioskUserId").HasColumnType("bigint").IsOptional();
            Property(x => x.AmountTobepayForEmitra).HasColumnName(@"AmountTobepayForEmitra").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.ZooTicketBoardingVerificationStatus).HasColumnName(@"ZooTicketBoardingVerificationStatus").HasColumnType("bit").IsRequired();
            Property(x => x.BoardingVerificationDateTime).HasColumnName(@"BoardingVerificationDateTime").HasColumnType("datetime").IsOptional();
            Property(x => x.InstitutionalDocumentofTourRepoDocId).HasColumnName(@"Institutional_DocumentofTour_RepoDocID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.InstitutionalDocumentofTourName).HasColumnName(@"Institutional_DocumentofTour_Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.InstitutionalDocumentofTourDocStatus).HasColumnName(@"Institutional_DocumentofTour_DocStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.InstitutionalHeadIdProofRepoDocId).HasColumnName(@"Institutional_HeadIdProof_RepoDocID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.IInstitutionalHeadIdProofName).HasColumnName(@"IInstitutional_HeadIdProof_Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.InstitutionalHeadIdProofDocStatus).HasColumnName(@"Institutional_HeadIdProof_DocStatus").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ShiftTypeId).HasColumnName(@"ShiftTypeID").HasColumnType("tinyint").IsOptional();
        }
    }

}
// </auto-generated>
