// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace FMDSS.Models
{

    // tbl_SafariBooking
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class Citizen_TblSafariBookingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Citizen_TblSafariBooking>
    {
        public Citizen_TblSafariBookingConfiguration()
            : this("Citizen")
        {
        }

        public Citizen_TblSafariBookingConfiguration(string schema)
        {
            ToTable("tbl_SafariBooking", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TicketId).HasColumnName(@"TicketID").HasColumnType("bigint").IsOptional();
            Property(x => x.VehicleCatId).HasColumnName(@"VehicleCatID").HasColumnType("bigint").IsOptional();
            Property(x => x.VehicleId).HasColumnName(@"VehicleID").HasColumnType("bigint").IsOptional();
            Property(x => x.TotalBookedSeat).HasColumnName(@"TotalBookedSeat").HasColumnType("int").IsOptional();
            Property(x => x.ArrivalDate).HasColumnName(@"ArrivalDate").HasColumnType("datetime").IsOptional();
            Property(x => x.TotalFees).HasColumnName(@"TotalFees").HasColumnType("decimal").IsOptional().HasPrecision(18,2);
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("int").IsOptional();
            Property(x => x.EnteredOn).HasColumnName(@"EnteredOn").HasColumnType("datetime").IsOptional();
            Property(x => x.EnteredBy).HasColumnName(@"EnteredBy").HasColumnType("bigint").IsOptional();
            Property(x => x.UpdatedOn).HasColumnName(@"UpdatedOn").HasColumnType("datetime").IsOptional();
            Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("bigint").IsOptional();

            // Foreign keys
            HasOptional(a => a.Master_TblMstVehicleEquipment).WithMany(b => b.Citizen_TblSafariBookings).HasForeignKey(c => c.VehicleCatId).WillCascadeOnDelete(false); // FK_VehicleCatID
            HasOptional(a => a.Master_TblMstVehicleEquipmentFee).WithMany(b => b.Citizen_TblSafariBookings).HasForeignKey(c => c.VehicleId).WillCascadeOnDelete(false); // FK_VehicleID
        }
    }

}
// </auto-generated>
