// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace FMDSS.Models
{

    // Tokens
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class TokenConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Token>
    {
        public TokenConfiguration()
            : this("dbo")
        {
        }

        public TokenConfiguration(string schema)
        {
            ToTable("Tokens", schema);
            HasKey(x => x.TokenId);

            Property(x => x.TokenId).HasColumnName(@"TokenId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("int").IsRequired();
            Property(x => x.AuthToken).HasColumnName(@"AuthToken").HasColumnType("nvarchar").IsRequired().HasMaxLength(250);
            Property(x => x.IssuedOn).HasColumnName(@"IssuedOn").HasColumnType("datetime").IsRequired();
            Property(x => x.ExpiresOn).HasColumnName(@"ExpiresOn").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.User).WithMany(b => b.Tokens).HasForeignKey(c => c.UserId).WillCascadeOnDelete(false); // FK_Tokens_User
        }
    }

}
// </auto-generated>
